name: Cursor Register

on:
  workflow_dispatch:
    inputs:
      number:
        default: "2"
        type: number
        description: '使用临时邮箱时的注册数量（仅在TempEmail模式下有效）'
      max_workers:
        default: "1"
        type: number
        description: '并发线程数'
      email_server:
        type: choice
        options:
        - TempEmail
        - IMAP
        description: '邮箱服务器类型'
      ingest_to_oneapi:
        description: '将账号令牌上传到OneAPI'
        type: boolean
      upload_artifact:
        description: '将账号信息上传到构件'
        type: boolean
        default: true

jobs:
  build:
    runs-on: windows-latest
    env:
      HIDE_ACCOUNT_INFO: "true"
      ENABLE_BROWSER_LOG: "false"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install requirements
        run: |
          pip3 install -r ./requirements.txt

      - name: "[TempEmail][OneAPI] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server" `
          oneapi.enabled=true oneapi.url="${{ secrets.CURSOR_ONEAPI_URL }}" oneapi.token="${{ secrets.CURSOR_ONEAPI_TOKEN }}" oneapi.channel_url="${{ secrets.CURSOR_CHANNEL_URL }}" 

      - name: "[TempEmail][CSV] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'false' && github.event.inputs.upload_artifact == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server"

      # 处理多IMAP邮箱配置 - 使用JSON格式的secrets
      - name: "Create config file for IMAP mode"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          # 创建临时配置文件
          echo 'register:' > ./temp_config.yaml
          echo '  email_server:' >> ./temp_config.yaml
          echo '    name: imap_email_server' >> ./temp_config.yaml
          echo '    use_custom_address: true' >> ./temp_config.yaml
          echo '    custom_email_addresses:' >> ./temp_config.yaml
          
          # 解析JSON格式的邮箱配置
          $emailConfigs = '${{ secrets.CURSOR_EMAIL_CONFIGS }}' | ConvertFrom-Json
          foreach ($config in $emailConfigs) {
            echo "    - email: ""$($config.email)""" >> ./temp_config.yaml
            echo "      imap_server: ""$($config.imap_server)""" >> ./temp_config.yaml
            echo "      imap_port: $($config.imap_port)" >> ./temp_config.yaml
            echo "      username: ""$($config.username)""" >> ./temp_config.yaml
            echo "      password: ""$($config.password)""" >> ./temp_config.yaml
          }
          
          # 添加其他配置
          echo '  max_workers: ${{ github.event.inputs.max_workers }}' >> ./temp_config.yaml
          echo '  delete_low_balance_account: true' >> ./temp_config.yaml
          echo '  delete_low_balance_account_threshold: 50' >> ./temp_config.yaml
          
          # 添加OneAPI配置
          if ('${{ github.event.inputs.ingest_to_oneapi }}' -eq 'true') {
            echo 'oneapi:' >> ./temp_config.yaml
            echo '  enabled: true' >> ./temp_config.yaml
            echo '  url: "${{ secrets.CURSOR_ONEAPI_URL }}"' >> ./temp_config.yaml
            echo '  token: "${{ secrets.CURSOR_ONEAPI_TOKEN }}"' >> ./temp_config.yaml
            echo '  channel_url: "${{ secrets.CURSOR_CHANNEL_URL }}"' >> ./temp_config.yaml
          } else {
            echo 'oneapi:' >> ./temp_config.yaml
            echo '  enabled: false' >> ./temp_config.yaml
          }
          
          # 复制到配置目录
          cp ./temp_config.yaml ./config/config.yaml
          
          # 显示已配置的邮箱数量
          $emailCount = ($emailConfigs | Measure-Object).Count
          echo "已配置 $emailCount 个邮箱地址"
      
      - name: "[IMAP] Run script"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          python3 ./cursor_register.py

      - name: Upload csv files to artifact
        if: ${{ github.event.inputs.upload_artifact == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: "Account Info"
          path: "*.csv"
          retention-days: 1
