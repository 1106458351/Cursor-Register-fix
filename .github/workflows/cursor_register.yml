name: Cursor Register

on:
  workflow_dispatch:
    inputs:
      number:
        default: "2"
        type: number
        description: '使用临时邮箱时的注册数量（仅在TempEmail模式下有效）'
      max_workers:
        default: "1"
        type: number
        description: '并发线程数'
      email_server:
        type: choice
        options:
        - TempEmail
        - IMAP
        description: '邮箱服务器类型'
      ingest_to_oneapi:
        description: '将账号令牌上传到OneAPI'
        type: boolean
      upload_artifact:
        description: '将账号信息上传到构件'
        type: boolean
        default: true

jobs:
  build:
    runs-on: windows-latest
    env:
      HIDE_ACCOUNT_INFO: "true"
      ENABLE_BROWSER_LOG: "false"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install requirements
        run: |
          pip3 install -r ./requirements.txt

      - name: "[TempEmail][OneAPI] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server" `
          oneapi.enabled=true oneapi.url="${{ secrets.CURSOR_ONEAPI_URL }}" oneapi.token="${{ secrets.CURSOR_ONEAPI_TOKEN }}" oneapi.channel_url="${{ secrets.CURSOR_CHANNEL_URL }}" 

      - name: "[TempEmail][CSV] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'false' && github.event.inputs.upload_artifact == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server"

      - name: "Create config file for IMAP mode"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          $configContent = @"
register:
  email_server:
    name: imap_email_server
    use_custom_address: true
    custom_email_addresses:
"@
          Set-Content -Path "./temp_config.yaml" -Value $configContent
          
          $emailConfigs = '${{ secrets.CURSOR_EMAIL_CONFIGS }}' | ConvertFrom-Json
          foreach ($config in $emailConfigs) {
            $emailConfig = @"
    - email: "$($config.email)"
      imap_server: "$($config.imap_server)"
      imap_port: $($config.imap_port)
      username: "$($config.username)"
      password: "$($config.password)"
"@
            Add-Content -Path "./temp_config.yaml" -Value $emailConfig
          }
          
          $additionalConfig = @"
  max_workers: ${{ github.event.inputs.max_workers }}
  delete_low_balance_account: true
  delete_low_balance_account_threshold: 50
"@
          Add-Content -Path "./temp_config.yaml" -Value $additionalConfig
          
          if ('${{ github.event.inputs.ingest_to_oneapi }}' -eq 'true') {
            $oneapiConfig = @"
oneapi:
  enabled: true
  url: "${{ secrets.CURSOR_ONEAPI_URL }}"
  token: "${{ secrets.CURSOR_ONEAPI_TOKEN }}"
  channel_url: "${{ secrets.CURSOR_CHANNEL_URL }}"
"@
          } else {
            $oneapiConfig = @"
oneapi:
  enabled: false
"@
          }
          Add-Content -Path "./temp_config.yaml" -Value $oneapiConfig
          
          Copy-Item -Path "./temp_config.yaml" -Destination "./config/config.yaml" -Force
          
          $emailCount = ($emailConfigs | Measure-Object).Count
          Write-Host "已配置 $emailCount 个邮箱地址"
      
      - name: "[IMAP] Run script"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          python3 ./cursor_register.py

      - name: Upload csv files to artifact
        if: ${{ github.event.inputs.upload_artifact == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: "Account Info"
          path: "*.csv"
          retention-days: 1
