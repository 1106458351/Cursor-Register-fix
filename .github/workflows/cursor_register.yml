name: Cursor Register

on:
  workflow_dispatch:
    inputs:
      number:
        default: "2"
        type: number
        description: '使用临时邮箱时的注册数量（仅在TempEmail模式下有效）'
      max_workers:
        default: "1"
        type: number
        description: '并发线程数'
      email_server:
        type: choice
        options:
        - TempEmail
        - IMAP
        description: '邮箱服务器类型'
      ingest_to_oneapi:
        description: '将账号令牌上传到OneAPI'
        type: boolean
      upload_artifact:
        description: '将账号信息上传到构件'
        type: boolean
        default: true

jobs:
  build:
    runs-on: windows-latest
    env:
      HIDE_ACCOUNT_INFO: "true"
      ENABLE_BROWSER_LOG: "false"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install requirements
        run: |
          pip3 install -r ./requirements.txt

      - name: "[TempEmail][OneAPI] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server" `
          oneapi.enabled=true oneapi.url="${{ secrets.CURSOR_ONEAPI_URL }}" oneapi.token="${{ secrets.CURSOR_ONEAPI_TOKEN }}" oneapi.channel_url="${{ secrets.CURSOR_CHANNEL_URL }}" 

      - name: "[TempEmail][CSV] Run script"
        if: ${{ github.event.inputs.email_server == 'TempEmail' && github.event.inputs.ingest_to_oneapi == 'false' && github.event.inputs.upload_artifact == 'true' }}
        run: |
          python3 ./cursor_register.py register.number=${{ github.event.inputs.number }} register.max_workers=${{ github.event.inputs.max_workers }} `
          register.email_server.name="temp_email_server"

      - name: "[IMAP] Update email configuration"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          python3 -c "
          import yaml
          import os
          import json
          
          # 读取配置文件
          with open('./config/config.yaml', 'r', encoding='utf-8') as f:
              config = yaml.safe_load(f)
          
          # 设置邮箱服务器类型
          config['register']['email_server']['name'] = 'imap_email_server'
          config['register']['email_server']['use_custom_address'] = True
          
          # 设置并发线程数
          config['register']['max_workers'] = ${{ github.event.inputs.max_workers }}
          
          # 设置OneAPI配置
          if '${{ github.event.inputs.ingest_to_oneapi }}' == 'true':
              if 'oneapi' not in config:
                  config['oneapi'] = {}
              config['oneapi']['enabled'] = True
              config['oneapi']['url'] = '${{ secrets.CURSOR_ONEAPI_URL }}'
              config['oneapi']['token'] = '${{ secrets.CURSOR_ONEAPI_TOKEN }}'
              config['oneapi']['channel_url'] = '${{ secrets.CURSOR_CHANNEL_URL }}'
          else:
              if 'oneapi' not in config:
                  config['oneapi'] = {}
              config['oneapi']['enabled'] = False
          
          # 保存配置文件
          with open('./config/config.yaml', 'w', encoding='utf-8') as f:
              yaml.dump(config, f, default_flow_style=False, allow_unicode=True)
          
          # 输出邮箱数量
          email_count = len(config['register']['email_server'].get('custom_email_addresses', []))
          print(f'已配置 {email_count} 个邮箱地址')
          "
      
      - name: "[IMAP] Run script"
        if: ${{ github.event.inputs.email_server == 'IMAP' }}
        run: |
          python3 ./cursor_register.py

      - name: Upload csv files to artifact
        if: ${{ github.event.inputs.upload_artifact == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: "Account Info"
          path: "*.csv"
          retention-days: 1
